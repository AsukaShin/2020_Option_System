生产者进程：
do{
     wait(empty) ;
     wait(mutex) ；
     add nextp to buffer
 signal(mutex) ;
     signal(full) ;
}while(1) ;

消费者进程：
do{
     wait(full) ;
     wait(mutex) ;
     remove an item from buffer to nextp
 signal(mutex) ;
     signal(empty) ;
}while(1) ;

信号量：
empty ：表示空缓冲区个数，初值为n；  
full ：表示有数据的缓冲区个数，初值为0； 
mutex ：用来控制互斥的访问缓冲区，初值为1

 
例：
假设张、王、李三人在吃水果

void 张()
{
	while(true)
	{
		wait(empty);
		produce fruit；
		if( fruit=='苹果'）
			signal(apple);             //apple++, 告知王有苹果了
		else
			signal(peach);           //orange++, 告知李有桃子了
	}
}
void 王()
{
	while(true)
	{
		wait(apple);                //取水果
		signal(empty);             //empty++,  告知张没水果
	}
}
void 李()
{
	while(true)
	{
		wait(peach);             //取水果
		signal(empty)；            //empty++,  告知张没水果
	}
}

