1、先来先服务调度算法（FCFS）:从后备作业队列中选择最先进入该队列的作业，将它们调入内存，
为它们分配资源、创建进程，然后放入就绪队列。
特点：简单，但效率不高
2、短作业优先调度算法（SPF）:从后备队列中选择一个或若干个估计运行时间最短的作业，将它们
调入内存,放入就绪队列。
特点：提高吞吐量但是对长作业不利。
3、优先权调度算法(FPF)：从后备队列中选择若干个优先权最高的作业装入内存，放入就绪队列。
特点：实现较复杂，公平性差。
1）非抢占式优先权算法：系统一旦把处理机分配给就绪队列中优先权最高的进程后，该进程便一直执
行下去，直至完成。
2） 抢占式优先权调度算法：在已分配进程执行期间，只要又出现了另一个其优先权更高的进程，进程
调度程序就立即停止当前进程的执行，重新将处理机分配给新到的优先权最高的进程。
4、基于时间片的轮转调度算法：系统将所有的就绪进程按先来先服务的原则排成一个队列，每次调度时，
把CPU 分配给队首进程，并令其执行一个时间片。当执行的时间片用完时，计时器发出时钟中断请求，程
序据此信号停止该进程的执行，将它送往就绪队列的末尾；然后，再把处理机分配给就绪队列中新的队首
进程，同时也让它执行一个时间片。如此重复。
特点：系统可以在一定时间内响应尽可能多的进程。
